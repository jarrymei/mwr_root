<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>shiro</description>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--前后端分离   中登录界面跳转应由前端路由控制，后台仅返回json数据-->
        <property name="loginUrl" value="/unauth"/>
        <property name="filterChainDefinitions">
            <value>
                /logout=logout
                /login=anon
                /static/**=anon
                /ajaxLogin=anon
                /**=authc
            </value>
        </property>
    </bean>

    <!--凭证匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!--散列算法，这里使用MD5-->
        <property name="hashAlgorithmName" value="md5"/>
        <!--散列2次-->
        <property name="hashIterations" value="2"/>
    </bean>

    <bean id="myRealm" class="com.silence.security.realm.MyRealm">
        <!--<property name="credentialsMatcher" ref="credentialsMatcher"/>-->
    </bean>

    <bean id="sessionManager" class="com.silence.security.session.MySessionManager">
        <!--去掉url后的JSESSIONID-->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO">
            <bean class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"/>
        </property>
        <property name="sessionIdCookie" ref="simpleCookie"/>
    </bean>

    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
        <!--以及域名配置-->
        <!--<property name="domain" value=""/>-->
    </bean>

    <!--cookie设置-->
   <!-- <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        &lt;!&ndash;  30天 &ndash;&gt;
        <property name="maxAge" value="2592000"/>
    </bean>

    &lt;!&ndash; rememberMeManager管理器 &ndash;&gt;
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>-->

    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--缓存管理-->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>

    <bean id="ehCacheManager" class ="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:shiro-ehcache.xml" />
        <property name="shared" value="true"></property>
    </bean>

    <!-- spring 封装ehcache缓存管理器  -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>

    <!-- 激活spring 缓存注解 -->
    <cache:annotation-driven cache-manager="cacheManager"/>


</beans>